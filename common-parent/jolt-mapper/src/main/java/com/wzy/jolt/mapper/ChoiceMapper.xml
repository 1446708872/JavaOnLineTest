<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzy.jolt.mapper.ChoiceMapper">
  <resultMap id="BaseResultMap" type="com.wzy.jolt.model.Choice">
    <id column="choice_id" jdbcType="INTEGER" property="choiceId" />
    <result column="problem_id" jdbcType="INTEGER" property="problemId" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wzy.jolt.model.ChoiceWithBLOBs">
    <result column="introduce" jdbcType="LONGVARCHAR" property="introduce" />
    <result column="A" jdbcType="LONGVARCHAR" property="a" />
    <result column="B" jdbcType="LONGVARCHAR" property="b" />
    <result column="C" jdbcType="LONGVARCHAR" property="c" />
    <result column="D" jdbcType="LONGVARCHAR" property="d" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    choice_id, problem_id, answer, score
  </sql>
  <sql id="Blob_Column_List">
    introduce, A, B, C, D
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wzy.jolt.model.ChoiceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wzy.jolt.model.ChoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from choice
    where choice_id = #{choiceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from choice
    where choice_id = #{choiceId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wzy.jolt.model.ChoiceExample">
    delete from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wzy.jolt.model.ChoiceWithBLOBs">
    insert into choice (choice_id, problem_id, answer, 
      score, introduce, A, 
      B, C, D
      )
    values (#{choiceId,jdbcType=INTEGER}, #{problemId,jdbcType=INTEGER}, #{answer,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{introduce,jdbcType=LONGVARCHAR}, #{a,jdbcType=LONGVARCHAR}, 
      #{b,jdbcType=LONGVARCHAR}, #{c,jdbcType=LONGVARCHAR}, #{d,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wzy.jolt.model.ChoiceWithBLOBs">
    insert into choice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="choiceId != null">
        choice_id,
      </if>
      <if test="problemId != null">
        problem_id,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="a != null">
        A,
      </if>
      <if test="b != null">
        B,
      </if>
      <if test="c != null">
        C,
      </if>
      <if test="d != null">
        D,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="choiceId != null">
        #{choiceId,jdbcType=INTEGER},
      </if>
      <if test="problemId != null">
        #{problemId,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="a != null">
        #{a,jdbcType=LONGVARCHAR},
      </if>
      <if test="b != null">
        #{b,jdbcType=LONGVARCHAR},
      </if>
      <if test="c != null">
        #{c,jdbcType=LONGVARCHAR},
      </if>
      <if test="d != null">
        #{d,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wzy.jolt.model.ChoiceExample" resultType="java.lang.Long">
    select count(*) from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update choice
    <set>
      <if test="record.choiceId != null">
        choice_id = #{record.choiceId,jdbcType=INTEGER},
      </if>
      <if test="record.problemId != null">
        problem_id = #{record.problemId,jdbcType=INTEGER},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.a != null">
        A = #{record.a,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.b != null">
        B = #{record.b,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.c != null">
        C = #{record.c,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.d != null">
        D = #{record.d,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update choice
    set choice_id = #{record.choiceId,jdbcType=INTEGER},
      problem_id = #{record.problemId,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      A = #{record.a,jdbcType=LONGVARCHAR},
      B = #{record.b,jdbcType=LONGVARCHAR},
      C = #{record.c,jdbcType=LONGVARCHAR},
      D = #{record.d,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update choice
    set choice_id = #{record.choiceId,jdbcType=INTEGER},
      problem_id = #{record.problemId,jdbcType=INTEGER},
      answer = #{record.answer,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wzy.jolt.model.ChoiceWithBLOBs">
    update choice
    <set>
      <if test="problemId != null">
        problem_id = #{problemId,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
      <if test="a != null">
        A = #{a,jdbcType=LONGVARCHAR},
      </if>
      <if test="b != null">
        B = #{b,jdbcType=LONGVARCHAR},
      </if>
      <if test="c != null">
        C = #{c,jdbcType=LONGVARCHAR},
      </if>
      <if test="d != null">
        D = #{d,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where choice_id = #{choiceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wzy.jolt.model.ChoiceWithBLOBs">
    update choice
    set problem_id = #{problemId,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=LONGVARCHAR},
      A = #{a,jdbcType=LONGVARCHAR},
      B = #{b,jdbcType=LONGVARCHAR},
      C = #{c,jdbcType=LONGVARCHAR},
      D = #{d,jdbcType=LONGVARCHAR}
    where choice_id = #{choiceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wzy.jolt.model.Choice">
    update choice
    set problem_id = #{problemId,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER}
    where choice_id = #{choiceId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.wzy.jolt.model.Choice">
    <result column="c_id" jdbcType="BIGINT" property="cId" />
    <result column="c_subject" jdbcType="VARCHAR" property="cSubject" />
    <result column="c_type" jdbcType="BIGINT" property="cType" />
    <result column="optionA" jdbcType="VARCHAR" property="optiona" />
    <result column="optionB" jdbcType="VARCHAR" property="optionb" />
    <result column="optionC" jdbcType="VARCHAR" property="optionc" />
    <result column="optionD" jdbcType="VARCHAR" property="optiond" />
    <result column="c_answer" jdbcType="VARCHAR" property="cAnswer" />
    <result column="c_note" jdbcType="VARCHAR" property="cNote" />
    <result column="topic_type_id" jdbcType="BIGINT" property="topicTypeId" />
    <result column="id" jdbcType="BIGINT" property="id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    c_id, c_subject, c_type, optionA, optionB, optionC, optionD, c_answer, c_note, topic_type_id, 
    id
  </sql>
  <select id="selectByExample" parameterType="com.wzy.jolt.model.ChoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wzy.jolt.model.ChoiceExample">
    delete from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wzy.jolt.model.Choice">
    insert into choice (c_id, c_subject, c_type, 
      optionA, optionB, optionC, 
      optionD, c_answer, c_note, 
      topic_type_id, id)
    values (#{cId,jdbcType=BIGINT}, #{cSubject,jdbcType=VARCHAR}, #{cType,jdbcType=BIGINT}, 
      #{optiona,jdbcType=VARCHAR}, #{optionb,jdbcType=VARCHAR}, #{optionc,jdbcType=VARCHAR}, 
      #{optiond,jdbcType=VARCHAR}, #{cAnswer,jdbcType=VARCHAR}, #{cNote,jdbcType=VARCHAR}, 
      #{topicTypeId,jdbcType=BIGINT}, #{id,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.wzy.jolt.model.Choice">
    insert into choice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        c_id,
      </if>
      <if test="cSubject != null">
        c_subject,
      </if>
      <if test="cType != null">
        c_type,
      </if>
      <if test="optiona != null">
        optionA,
      </if>
      <if test="optionb != null">
        optionB,
      </if>
      <if test="optionc != null">
        optionC,
      </if>
      <if test="optiond != null">
        optionD,
      </if>
      <if test="cAnswer != null">
        c_answer,
      </if>
      <if test="cNote != null">
        c_note,
      </if>
      <if test="topicTypeId != null">
        topic_type_id,
      </if>
      <if test="id != null">
        id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        #{cId,jdbcType=BIGINT},
      </if>
      <if test="cSubject != null">
        #{cSubject,jdbcType=VARCHAR},
      </if>
      <if test="cType != null">
        #{cType,jdbcType=BIGINT},
      </if>
      <if test="optiona != null">
        #{optiona,jdbcType=VARCHAR},
      </if>
      <if test="optionb != null">
        #{optionb,jdbcType=VARCHAR},
      </if>
      <if test="optionc != null">
        #{optionc,jdbcType=VARCHAR},
      </if>
      <if test="optiond != null">
        #{optiond,jdbcType=VARCHAR},
      </if>
      <if test="cAnswer != null">
        #{cAnswer,jdbcType=VARCHAR},
      </if>
      <if test="cNote != null">
        #{cNote,jdbcType=VARCHAR},
      </if>
      <if test="topicTypeId != null">
        #{topicTypeId,jdbcType=BIGINT},
      </if>
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wzy.jolt.model.ChoiceExample" resultType="java.lang.Long">
    select count(*) from choice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update choice
    <set>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=BIGINT},
      </if>
      <if test="record.cSubject != null">
        c_subject = #{record.cSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.cType != null">
        c_type = #{record.cType,jdbcType=BIGINT},
      </if>
      <if test="record.optiona != null">
        optionA = #{record.optiona,jdbcType=VARCHAR},
      </if>
      <if test="record.optionb != null">
        optionB = #{record.optionb,jdbcType=VARCHAR},
      </if>
      <if test="record.optionc != null">
        optionC = #{record.optionc,jdbcType=VARCHAR},
      </if>
      <if test="record.optiond != null">
        optionD = #{record.optiond,jdbcType=VARCHAR},
      </if>
      <if test="record.cAnswer != null">
        c_answer = #{record.cAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.cNote != null">
        c_note = #{record.cNote,jdbcType=VARCHAR},
      </if>
      <if test="record.topicTypeId != null">
        topic_type_id = #{record.topicTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update choice
    set c_id = #{record.cId,jdbcType=BIGINT},
      c_subject = #{record.cSubject,jdbcType=VARCHAR},
      c_type = #{record.cType,jdbcType=BIGINT},
      optionA = #{record.optiona,jdbcType=VARCHAR},
      optionB = #{record.optionb,jdbcType=VARCHAR},
      optionC = #{record.optionc,jdbcType=VARCHAR},
      optionD = #{record.optiond,jdbcType=VARCHAR},
      c_answer = #{record.cAnswer,jdbcType=VARCHAR},
      c_note = #{record.cNote,jdbcType=VARCHAR},
      topic_type_id = #{record.topicTypeId,jdbcType=BIGINT},
      id = #{record.id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>